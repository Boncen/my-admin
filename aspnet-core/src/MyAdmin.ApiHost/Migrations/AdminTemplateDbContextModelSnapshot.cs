// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAdmin.ApiHost.Db;

#nullable disable

namespace MyAdmin.ApiHost.Migrations
{
    [DbContext(typeof(AdminTemplateDbContext))]
    partial class AdminTemplateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyAdmin.ApiHost.models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext");

                    b.Property<string>("Exceptions")
                        .HasColumnType("longtext");

                    b.Property<string>("Host")
                        .HasColumnType("longtext");

                    b.Property<string>("HttpMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.Property<string>("Referer")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestBody")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseStatusCode")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MaLog");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext")
                        .HasComment("路由路径");

                    b.HasKey("Id");

                    b.ToTable("MaMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2d0fa1a-635a-4e63-a6e5-0371fcdbac47"),
                            Code = "Home",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(7455),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 0,
                            MenuType = 1,
                            Name = "首页",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("69aa45fd-960a-4667-8da8-9fa9580f5494"),
                            Code = "SystemManager",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8532),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 0,
                            MenuType = 3,
                            Name = "系统管理",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("c32e142e-8576-4ab3-bb0e-7f3920da8886"),
                            Code = "UserManager",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8540),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 1,
                            Name = "用户管理",
                            Order = 1,
                            Url = "/sys/user/index"
                        },
                        new
                        {
                            Id = new Guid("24f1dcbd-0f97-4735-a235-ad0d8712e37b"),
                            Code = "UserManager-Add",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8719),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "用户管理-新增",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("ace5e6ea-b855-4e48-9623-1d8373f49671"),
                            Code = "UserManager-Update",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8724),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "用户管理-更新",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("8e1cca08-5121-4d1c-b618-3292a2f83a3b"),
                            Code = "UserManager-Delete",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8784),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "用户管理-删除",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("cc8d7fc5-f53d-405d-9912-0034e7c8296a"),
                            Code = "RoleManager",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8786),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 1,
                            Name = "角色管理",
                            Order = 2,
                            Url = "/sys/role/index"
                        },
                        new
                        {
                            Id = new Guid("15893413-9f8d-4160-89bd-fb18565a95ef"),
                            Code = "RoleManager-Add",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8788),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "角色管理-新增",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("a706e070-05ef-4ad3-a71a-93cc470ff124"),
                            Code = "RoleManager-Update",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8790),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "角色管理-更新",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("f25f4e3d-112f-4ba6-b3b3-a15de282baa8"),
                            Code = "RoleManager-Delete",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8793),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "角色管理-删除",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("26a43341-1169-4af4-bc01-ec06cca006d0"),
                            Code = "TenantManager",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8794),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 1,
                            Name = "租户管理",
                            Order = 3,
                            Url = "/sys/tenant/index"
                        },
                        new
                        {
                            Id = new Guid("fcf206e7-4635-4e77-bfae-a4680e151acd"),
                            Code = "TenantManager-Add",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8796),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "租户管理-新增",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("82ff097f-c90a-4126-a543-0f6afafd39c1"),
                            Code = "TenantManager-Update",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8798),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "租户管理-更新",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("f9fd2a4d-b549-408d-834f-679addd3886b"),
                            Code = "TenantManager-Delete",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8800),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 1,
                            MenuType = 2,
                            Name = "租户管理-删除",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("a07929c4-5aa6-469b-b43a-62e325dce72c"),
                            Code = "Log",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(8802),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Level = 0,
                            MenuType = 1,
                            Name = "系统日志",
                            Order = 3
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("角色编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("MaRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e349556-e2fe-40fc-8d30-40aba7ab5390"),
                            Code = "Admin",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(4724),
                            CreatorId = new Guid("85e67805-3d92-4199-9cc3-347a66855f06"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "admin role",
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("3486d760-d9a1-4a68-82dc-bf827590ad03"),
                            Code = "Dev",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(6569),
                            CreatorId = new Guid("85e67805-3d92-4199-9cc3-347a66855f06"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "dev role",
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Name = "dev"
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("MaUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            Account = "admin",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 111, DateTimeKind.Local).AddTicks(7838),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "admin",
                            Password = "73470577544c7293365739ab3c5037b2313d3a353e190cd04aebf760bd2bb8f2",
                            Salt = "7894561230"
                        },
                        new
                        {
                            Id = new Guid("85e67805-3d92-4199-9cc3-347a66855f06"),
                            Account = "dev",
                            CreationTime = new DateTime(2024, 9, 11, 11, 54, 45, 123, DateTimeKind.Local).AddTicks(4216),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "dev",
                            Password = "73470577544c7293365739ab3c5037b2313d3a353e190cd04aebf760bd2bb8f2",
                            Salt = "7894561230"
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.RoleMenu", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.HasKey("RoleId", "MenuId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("1d5b1109-e8fe-4ecc-81c7-02d6e23220b0"),
                            RoleId = new Guid("7e349556-e2fe-40fc-8d30-40aba7ab5390")
                        },
                        new
                        {
                            UserId = new Guid("85e67805-3d92-4199-9cc3-347a66855f06"),
                            RoleId = new Guid("3486d760-d9a1-4a68-82dc-bf827590ad03")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
