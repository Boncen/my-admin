// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAdmin.ApiHost.Db;

#nullable disable

namespace MyAdmin.ApiHost.Migrations
{
    [DbContext(typeof(AdminTemplateDbContext))]
    [Migration("20240929061716_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyAdmin.ApiHost.models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescBody")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext");

                    b.Property<string>("Exceptions")
                        .HasColumnType("longtext");

                    b.Property<string>("Host")
                        .HasColumnType("longtext");

                    b.Property<string>("HttpMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.Property<string>("Referer")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestBody")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseStatusCode")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MaLog");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Label")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasComment("路由名称");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .HasColumnType("longtext")
                        .HasComment("路由路径");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("MaMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a454a788-4231-4d96-8e98-8ce426ea4acc"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(1927),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "首页",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.home",
                            MenuType = 1,
                            Name = "home",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3079),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "系统管理",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.sysmanager",
                            MenuType = 3,
                            Name = "SysManager",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("a39e28a9-9da9-48ee-a89d-5071ccf854fc"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3086),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "用户管理",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.users",
                            MenuType = 1,
                            Name = "users",
                            Order = 1,
                            ParentId = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17"),
                            Path = "/sys/user/index"
                        },
                        new
                        {
                            Id = new Guid("5a7b38b6-b162-40ac-98e9-821660821a5e"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3594),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "添加用户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.adduser",
                            MenuType = 2,
                            Name = "add_user",
                            Order = 1,
                            ParentId = new Guid("a39e28a9-9da9-48ee-a89d-5071ccf854fc")
                        },
                        new
                        {
                            Id = new Guid("9ad04f5c-4fec-40e0-be8d-3f359a058024"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3601),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "更新用户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.updateuser",
                            MenuType = 2,
                            Name = "update_user",
                            Order = 1,
                            ParentId = new Guid("a39e28a9-9da9-48ee-a89d-5071ccf854fc")
                        },
                        new
                        {
                            Id = new Guid("4f15068a-62a7-4e73-8cc3-31501643f699"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3603),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "删除用户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.deleteuser",
                            MenuType = 2,
                            Name = "delete_user",
                            Order = 1,
                            ParentId = new Guid("a39e28a9-9da9-48ee-a89d-5071ccf854fc")
                        },
                        new
                        {
                            Id = new Guid("52620b9b-ee0a-4153-b7b5-a58299756fe6"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3605),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "角色管理",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.roles",
                            MenuType = 1,
                            Name = "roles",
                            Order = 2,
                            ParentId = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17"),
                            Path = "/sys/role/index"
                        },
                        new
                        {
                            Id = new Guid("262e8351-96a0-45c0-a536-d99a278ddd8b"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3608),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "添加角色",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.addrole",
                            MenuType = 2,
                            Name = "add_role",
                            Order = 2,
                            ParentId = new Guid("52620b9b-ee0a-4153-b7b5-a58299756fe6"),
                            Path = "/sys/role/index"
                        },
                        new
                        {
                            Id = new Guid("bc5c7271-8b77-43f1-9937-d3bebf85d3ed"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3610),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "更新角色",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.updaterole",
                            MenuType = 2,
                            Name = "update_role",
                            Order = 2,
                            ParentId = new Guid("52620b9b-ee0a-4153-b7b5-a58299756fe6")
                        },
                        new
                        {
                            Id = new Guid("08a917b6-8964-4d98-86e6-851ebc83a4ea"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3612),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "删除角色",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.deleterole",
                            MenuType = 2,
                            Name = "delete_role",
                            Order = 2,
                            ParentId = new Guid("52620b9b-ee0a-4153-b7b5-a58299756fe6")
                        },
                        new
                        {
                            Id = new Guid("95ca7b1b-55dc-48e9-9317-7d67da1bec78"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3614),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "租户管理",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.tenants",
                            MenuType = 1,
                            Name = "tenants",
                            Order = 3,
                            ParentId = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17"),
                            Path = "/sys/tenant/index"
                        },
                        new
                        {
                            Id = new Guid("ecdf8af6-c987-41ad-8c60-48da796bf278"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3616),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "添加租户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.addtenant",
                            MenuType = 2,
                            Name = "add_tenant",
                            Order = 3,
                            ParentId = new Guid("95ca7b1b-55dc-48e9-9317-7d67da1bec78")
                        },
                        new
                        {
                            Id = new Guid("368a7827-0377-48ec-a335-59e49451b2c9"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3619),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "更新租户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.updatetenant",
                            MenuType = 2,
                            Name = "update_tenant",
                            Order = 3,
                            ParentId = new Guid("95ca7b1b-55dc-48e9-9317-7d67da1bec78")
                        },
                        new
                        {
                            Id = new Guid("b479f220-bbb6-4878-a184-619292efacd3"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3621),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "删除租户",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.deletetenant",
                            MenuType = 2,
                            Name = "delete_tenant",
                            Order = 3,
                            ParentId = new Guid("95ca7b1b-55dc-48e9-9317-7d67da1bec78")
                        },
                        new
                        {
                            Id = new Guid("19bac5dc-0b43-4809-ab3a-53be906de0e4"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3623),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "菜单管理",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.menus",
                            MenuType = 1,
                            Name = "menus",
                            Order = 4,
                            ParentId = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17"),
                            Path = "/sys/menu/index"
                        },
                        new
                        {
                            Id = new Guid("e8b21899-0105-42a5-8b12-b3cd291e81e5"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3626),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "添加菜单",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.addmenu",
                            MenuType = 2,
                            Name = "add_menu",
                            Order = 4,
                            ParentId = new Guid("19bac5dc-0b43-4809-ab3a-53be906de0e4")
                        },
                        new
                        {
                            Id = new Guid("9f857d8d-8558-47e3-9bda-119e0e63500c"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3628),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "更新菜单",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.updatemenu",
                            MenuType = 2,
                            Name = "update_menu",
                            Order = 4,
                            ParentId = new Guid("19bac5dc-0b43-4809-ab3a-53be906de0e4")
                        },
                        new
                        {
                            Id = new Guid("bf8559c0-b3cd-40a8-8465-8c46778f63bc"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3630),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "删除菜单",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.deletemenu",
                            MenuType = 2,
                            Name = "delete_menu",
                            Order = 4,
                            ParentId = new Guid("19bac5dc-0b43-4809-ab3a-53be906de0e4")
                        },
                        new
                        {
                            Id = new Guid("ae4f9eed-3e20-45c8-89ea-204c68000a06"),
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(3633),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            Label = "系统日志",
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Locale = "menu.server.syslog",
                            MenuType = 1,
                            Name = "sys_log",
                            Order = 5,
                            ParentId = new Guid("32bb7608-ceff-4e7c-8c67-ff3892625e17")
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasComment("角色编码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("MaRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("530da417-da46-492a-9f40-7840823f697f"),
                            Code = "Admin",
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 521, DateTimeKind.Local).AddTicks(9292),
                            CreatorId = new Guid("dcf2696e-8364-4559-b6ad-720eba834af7"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "admin role",
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("8c9f0746-f181-4f43-81b3-6bc087ad2b56"),
                            Code = "Dev",
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 522, DateTimeKind.Local).AddTicks(966),
                            CreatorId = new Guid("dcf2696e-8364-4559-b6ad-720eba834af7"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "dev role",
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Name = "dev"
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaTenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MaTenant");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.MaUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeleterId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LastModifierId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Salt")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("MaUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            Account = "admin",
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 512, DateTimeKind.Local).AddTicks(2957),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "admin",
                            Password = "73470577544c7293365739ab3c5037b2313d3a353e190cd04aebf760bd2bb8f2",
                            Salt = "7894561230"
                        },
                        new
                        {
                            Id = new Guid("dcf2696e-8364-4559-b6ad-720eba834af7"),
                            Account = "dev",
                            CreationTime = new DateTime(2024, 9, 29, 14, 17, 15, 521, DateTimeKind.Local).AddTicks(8767),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeleterId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            IsEnabled = true,
                            LastModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "dev",
                            Password = "73470577544c7293365739ab3c5037b2313d3a353e190cd04aebf760bd2bb8f2",
                            Salt = "7894561230"
                        });
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.RoleMenu", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.HasKey("RoleId", "MenuId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("MyAdmin.Core.Model.BuildIn.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("dd07176d-c210-41d6-bf0d-31182ec9c1b1"),
                            RoleId = new Guid("530da417-da46-492a-9f40-7840823f697f")
                        },
                        new
                        {
                            UserId = new Guid("dcf2696e-8364-4559-b6ad-720eba834af7"),
                            RoleId = new Guid("8c9f0746-f181-4f43-81b3-6bc087ad2b56")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
